// Code generated by protoc-gen-go. DO NOT EDIT.
// source: adinall-bidding.proto

package adinall

/*
聚告PMP DSP接口
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 推广位在页面所在的屏数
// 0: 未识别; 1-5: 第1-5屏; 6: 第六屏及以外
type BidRequest_AdInfo_ViewScreen int32

const (
	BidRequest_AdInfo_SCREEN_NA     BidRequest_AdInfo_ViewScreen = 0
	BidRequest_AdInfo_SCREEN_FIRST  BidRequest_AdInfo_ViewScreen = 1
	BidRequest_AdInfo_SCREEN_SECOND BidRequest_AdInfo_ViewScreen = 2
	BidRequest_AdInfo_SCREEN_THIRD  BidRequest_AdInfo_ViewScreen = 3
	BidRequest_AdInfo_SCREEN_FOURTH BidRequest_AdInfo_ViewScreen = 4
	BidRequest_AdInfo_SCREEN_FIFTH  BidRequest_AdInfo_ViewScreen = 5
	BidRequest_AdInfo_SCREEN_OTHER  BidRequest_AdInfo_ViewScreen = 6
)

var BidRequest_AdInfo_ViewScreen_name = map[int32]string{
	0: "SCREEN_NA",
	1: "SCREEN_FIRST",
	2: "SCREEN_SECOND",
	3: "SCREEN_THIRD",
	4: "SCREEN_FOURTH",
	5: "SCREEN_FIFTH",
	6: "SCREEN_OTHER",
}
var BidRequest_AdInfo_ViewScreen_value = map[string]int32{
	"SCREEN_NA":     0,
	"SCREEN_FIRST":  1,
	"SCREEN_SECOND": 2,
	"SCREEN_THIRD":  3,
	"SCREEN_FOURTH": 4,
	"SCREEN_FIFTH":  5,
	"SCREEN_OTHER":  6,
}

func (x BidRequest_AdInfo_ViewScreen) Enum() *BidRequest_AdInfo_ViewScreen {
	p := new(BidRequest_AdInfo_ViewScreen)
	*p = x
	return p
}
func (x BidRequest_AdInfo_ViewScreen) String() string {
	return proto.EnumName(BidRequest_AdInfo_ViewScreen_name, int32(x))
}
func (x *BidRequest_AdInfo_ViewScreen) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdInfo_ViewScreen_value, data, "BidRequest_AdInfo_ViewScreen")
	if err != nil {
		return err
	}
	*x = BidRequest_AdInfo_ViewScreen(value)
	return nil
}
func (BidRequest_AdInfo_ViewScreen) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 0, 0}
}

type BidRequest struct {
	// 当前协议版本号, 目前版本号为2
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 聚告PMP生成的唯一竞价ID, 32字节的字符串
	Bid *string `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	// 如果不为0, 那么这是一个测试请求
	// DSP需要返回一个正常填写的应答
	// 聚告PMP不会展现给用户, 且不会对该次请求计费
	IsTest *uint32 `protobuf:"varint,3,opt,name=is_test,json=isTest,def=0" json:"is_test,omitempty"`
	// 如果不为0, 那么这是一个ping请求
	// DSP需要返回一个空的应答
	IsPing *uint32 `protobuf:"varint,4,opt,name=is_ping,json=isPing,def=0" json:"is_ping,omitempty"`
	// 用户的IP地址, ipv4
	// 例如：192.168.1.1
	// 当前用户的IP地址(如192.168.1.1)
	Ip *string `protobuf:"bytes,5,opt,name=ip" json:"ip,omitempty"`
	// 用户的浏览器类型, 来源于 HTTP 请求头部的 User-Agent
	UserAgent *string `protobuf:"bytes,6,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// http 请求 header 中的 referer 信息
	Referer *string `protobuf:"bytes,7,opt,name=referer" json:"referer,omitempty"`
	// 用户的默认系统语言
	Language *string `protobuf:"bytes,8,opt,name=language" json:"language,omitempty"`
	// 用户的屏幕尺寸, 格式为“长 x 宽”, 例如1024x768
	ScreenSize *string `protobuf:"bytes,9,opt,name=screen_size,json=screenSize" json:"screen_size,omitempty"`
	// 用户的浏览器flash版本, 0为未知
	FlashVersion *int32 `protobuf:"varint,10,opt,name=flash_version,json=flashVersion,def=0" json:"flash_version,omitempty"`
	// 用户在聚告PMP平台中的唯一ID（当前Cookie的Visitor ID）
	VisitorId *string `protobuf:"bytes,11,opt,name=visitor_id,json=visitorId" json:"visitor_id,omitempty"`
	// 用户的地理位置信息(国家,城市)
	Geo *string `protobuf:"bytes,12,opt,name=geo" json:"geo,omitempty"`
	// 媒体域名
	Domain *string `protobuf:"bytes,13,opt,name=domain" json:"domain,omitempty"`
	// 广告位所在的页面URL
	Url *string `protobuf:"bytes,14,opt,name=url" json:"url,omitempty"`
	// 标识一个页面pv
	// 对于同一个页面的单个PV，聚告PMP会生成一个相同且唯一的page_session_id
	PageSessionId *string `protobuf:"bytes,15,opt,name=page_session_id,json=pageSessionId" json:"page_session_id,omitempty"`
	// 广告位所在媒体的分类
	// 参见数据字典 dict-site-category.txt
	Category []uint32 `protobuf:"varint,16,rep,name=category" json:"category,omitempty"`
	// 媒体用户的人群标签
	// 参见数据字典 dict-user-segment.txt
	UserSegment []string `protobuf:"bytes,17,rep,name=user_segment,json=userSegment" json:"user_segment,omitempty"`
	// 用户的内容标签
	// 参见数据字典 dict-content-tags.txt
	ContentTags []string `protobuf:"bytes,18,rep,name=content_tags,json=contentTags" json:"content_tags,omitempty"`
	// 流量所属来源, 预留字段, 目前为0
	// adx type 0表示SSP流量
	AdxType *uint32              `protobuf:"varint,19,opt,name=adx_type,json=adxType,def=0" json:"adx_type,omitempty"`
	Adinfo  []*BidRequest_AdInfo `protobuf:"bytes,20,rep,name=adinfo" json:"adinfo,omitempty"`
	App     *BidRequest_App      `protobuf:"bytes,22,opt,name=app" json:"app,omitempty"`
	// 所有该dsp参与的交易
	Deals                *BidRequest_Deal         `protobuf:"bytes,23,opt,name=deals" json:"deals,omitempty"`
	AdinallVideo         *BidRequest_AdinallVideo `protobuf:"bytes,24,opt,name=adinall_video,json=adinallVideo" json:"adinall_video,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}
func (*BidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0}
}
func (m *BidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest.Unmarshal(m, b)
}
func (m *BidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest.Marshal(b, m, deterministic)
}
func (dst *BidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest.Merge(dst, src)
}
func (m *BidRequest) XXX_Size() int {
	return xxx_messageInfo_BidRequest.Size(m)
}
func (m *BidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest proto.InternalMessageInfo

const Default_BidRequest_IsTest uint32 = 0
const Default_BidRequest_IsPing uint32 = 0
const Default_BidRequest_FlashVersion int32 = 0
const Default_BidRequest_AdxType uint32 = 0

func (m *BidRequest) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidRequest) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidRequest) GetIsTest() uint32 {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

func (m *BidRequest) GetIsPing() uint32 {
	if m != nil && m.IsPing != nil {
		return *m.IsPing
	}
	return Default_BidRequest_IsPing
}

func (m *BidRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetReferer() string {
	if m != nil && m.Referer != nil {
		return *m.Referer
	}
	return ""
}

func (m *BidRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *BidRequest) GetScreenSize() string {
	if m != nil && m.ScreenSize != nil {
		return *m.ScreenSize
	}
	return ""
}

func (m *BidRequest) GetFlashVersion() int32 {
	if m != nil && m.FlashVersion != nil {
		return *m.FlashVersion
	}
	return Default_BidRequest_FlashVersion
}

func (m *BidRequest) GetVisitorId() string {
	if m != nil && m.VisitorId != nil {
		return *m.VisitorId
	}
	return ""
}

func (m *BidRequest) GetGeo() string {
	if m != nil && m.Geo != nil {
		return *m.Geo
	}
	return ""
}

func (m *BidRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *BidRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest) GetPageSessionId() string {
	if m != nil && m.PageSessionId != nil {
		return *m.PageSessionId
	}
	return ""
}

func (m *BidRequest) GetCategory() []uint32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidRequest) GetUserSegment() []string {
	if m != nil {
		return m.UserSegment
	}
	return nil
}

func (m *BidRequest) GetContentTags() []string {
	if m != nil {
		return m.ContentTags
	}
	return nil
}

func (m *BidRequest) GetAdxType() uint32 {
	if m != nil && m.AdxType != nil {
		return *m.AdxType
	}
	return Default_BidRequest_AdxType
}

func (m *BidRequest) GetAdinfo() []*BidRequest_AdInfo {
	if m != nil {
		return m.Adinfo
	}
	return nil
}

func (m *BidRequest) GetApp() *BidRequest_App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *BidRequest) GetDeals() *BidRequest_Deal {
	if m != nil {
		return m.Deals
	}
	return nil
}

func (m *BidRequest) GetAdinallVideo() *BidRequest_AdinallVideo {
	if m != nil {
		return m.AdinallVideo
	}
	return nil
}

type BidRequest_AdInfo struct {
	// 媒体在聚告PMP中的唯一ID
	MediaId *string `protobuf:"bytes,1,req,name=media_id,json=mediaId" json:"media_id,omitempty"`
	// 当前页面广告位在聚告PMP中唯一的ID
	Adid *uint32 `protobuf:"varint,2,req,name=adid" json:"adid,omitempty"`
	// 媒体广告位在聚告PMP中的类型(1 - PC, 2 - WAP, 3 - APP)
	MediaDevice *uint32 `protobuf:"varint,3,opt,name=media_device,json=mediaDevice" json:"media_device,omitempty"`
	// 广告位展现形式(1:固定, 3:弹窗)
	// 参见数据字典 dict-view-type.txt
	ViewType *uint32 `protobuf:"varint,4,req,name=view_type,json=viewType" json:"view_type,omitempty"`
	// 广告位的尺寸: 宽 x 高
	// 例如: 300x250
	Size *string `protobuf:"bytes,5,req,name=size" json:"size,omitempty"`
	// 最低竞标价格，货币单位为人民币，数值含义为分/千次展现
	MinCpmPrice *uint32 `protobuf:"varint,6,req,name=min_cpm_price,json=minCpmPrice" json:"min_cpm_price,omitempty"`
	// 媒体禁止的敏感类目
	// 参见数据字典 dict-sensitive-category.txt
	ExcludeSensitiveCategory []uint32 `protobuf:"varint,7,rep,name=exclude_sensitive_category,json=excludeSensitiveCategory" json:"exclude_sensitive_category,omitempty"`
	// 媒体禁止的目标主域名, 多个情况下以半角逗号分隔
	ExcludeDomain []string `protobuf:"bytes,8,rep,name=exclude_domain,json=excludeDomain" json:"exclude_domain,omitempty"`
	// 媒体禁止的DSP(buyer)买家ID
	ExcludeBuyerId []string                      `protobuf:"bytes,9,rep,name=exclude_buyer_id,json=excludeBuyerId" json:"exclude_buyer_id,omitempty"`
	ViewScreen     *BidRequest_AdInfo_ViewScreen `protobuf:"varint,10,opt,name=view_screen,json=viewScreen,enum=adinall.BidRequest_AdInfo_ViewScreen" json:"view_screen,omitempty"`
	// 所属的交易类型(1:竞价, 2:固定价格)
	TransactionType      *uint32  `protobuf:"varint,11,req,name=transaction_type,json=transactionType" json:"transaction_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdInfo) Reset()         { *m = BidRequest_AdInfo{} }
func (m *BidRequest_AdInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdInfo) ProtoMessage()    {}
func (*BidRequest_AdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 0}
}
func (m *BidRequest_AdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdInfo.Unmarshal(m, b)
}
func (m *BidRequest_AdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdInfo.Marshal(b, m, deterministic)
}
func (dst *BidRequest_AdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdInfo.Merge(dst, src)
}
func (m *BidRequest_AdInfo) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdInfo.Size(m)
}
func (m *BidRequest_AdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdInfo proto.InternalMessageInfo

func (m *BidRequest_AdInfo) GetMediaId() string {
	if m != nil && m.MediaId != nil {
		return *m.MediaId
	}
	return ""
}

func (m *BidRequest_AdInfo) GetAdid() uint32 {
	if m != nil && m.Adid != nil {
		return *m.Adid
	}
	return 0
}

func (m *BidRequest_AdInfo) GetMediaDevice() uint32 {
	if m != nil && m.MediaDevice != nil {
		return *m.MediaDevice
	}
	return 0
}

func (m *BidRequest_AdInfo) GetViewType() uint32 {
	if m != nil && m.ViewType != nil {
		return *m.ViewType
	}
	return 0
}

func (m *BidRequest_AdInfo) GetSize() string {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return ""
}

func (m *BidRequest_AdInfo) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

func (m *BidRequest_AdInfo) GetExcludeSensitiveCategory() []uint32 {
	if m != nil {
		return m.ExcludeSensitiveCategory
	}
	return nil
}

func (m *BidRequest_AdInfo) GetExcludeDomain() []string {
	if m != nil {
		return m.ExcludeDomain
	}
	return nil
}

func (m *BidRequest_AdInfo) GetExcludeBuyerId() []string {
	if m != nil {
		return m.ExcludeBuyerId
	}
	return nil
}

func (m *BidRequest_AdInfo) GetViewScreen() BidRequest_AdInfo_ViewScreen {
	if m != nil && m.ViewScreen != nil {
		return *m.ViewScreen
	}
	return BidRequest_AdInfo_SCREEN_NA
}

func (m *BidRequest_AdInfo) GetTransactionType() uint32 {
	if m != nil && m.TransactionType != nil {
		return *m.TransactionType
	}
	return 0
}

type BidRequest_App struct {
	// 媒体投放广告类型
	// 1：横幅；2：开屏；3：插屏；4：原生信息流
	Adtype               *uint32                    `protobuf:"varint,1,req,name=adtype" json:"adtype,omitempty"`
	Device               *BidRequest_App_DeviceInfo `protobuf:"bytes,2,req,name=device" json:"device,omitempty"`
	Appinfo              *BidRequest_App_AppInfo    `protobuf:"bytes,3,req,name=appinfo" json:"appinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BidRequest_App) Reset()         { *m = BidRequest_App{} }
func (m *BidRequest_App) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App) ProtoMessage()    {}
func (*BidRequest_App) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 1}
}
func (m *BidRequest_App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_App.Unmarshal(m, b)
}
func (m *BidRequest_App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_App.Marshal(b, m, deterministic)
}
func (dst *BidRequest_App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_App.Merge(dst, src)
}
func (m *BidRequest_App) XXX_Size() int {
	return xxx_messageInfo_BidRequest_App.Size(m)
}
func (m *BidRequest_App) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_App.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_App proto.InternalMessageInfo

func (m *BidRequest_App) GetAdtype() uint32 {
	if m != nil && m.Adtype != nil {
		return *m.Adtype
	}
	return 0
}

func (m *BidRequest_App) GetDevice() *BidRequest_App_DeviceInfo {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest_App) GetAppinfo() *BidRequest_App_AppInfo {
	if m != nil {
		return m.Appinfo
	}
	return nil
}

type BidRequest_App_DeviceInfo struct {
	// 用户的设备系统类型
	// 1：安卓系统；2：ios系统; 3:未知; 4:window phone
	Os *uint32 `protobuf:"varint,3,req,name=os" json:"os,omitempty"`
	// 用户设备系统的版本号
	// 例如：7.0.2
	OsVersion *string `protobuf:"bytes,4,req,name=os_version,json=osVersion" json:"os_version,omitempty"`
	// 用户设备运营商
	// 1：中国移动；2：中国联通；3：中国电信; 4:未知
	Carrier *uint32 `protobuf:"varint,5,req,name=carrier" json:"carrier,omitempty"`
	// 用户设备网络连接类型
	// 1：2g；2：3g；3：wifi；4：4g; 5：未识别；
	Conn *uint32 `protobuf:"varint,6,req,name=conn" json:"conn,omitempty"`
	// 用户设备屏幕的密度，预留字段
	// 千分位表示，默认1000
	Density *uint32 `protobuf:"varint,7,opt,name=density" json:"density,omitempty"`
	// 用户设备制造厂商
	// 例如：nokia, samsung
	Brand *string `protobuf:"bytes,8,req,name=brand" json:"brand,omitempty"`
	// 用户设备型号
	// 例如：n70, galaxy
	Model *string `protobuf:"bytes,9,req,name=model" json:"model,omitempty"`
	// 用户设备唯一标识
	// 对于android设备，该值是设备的imei加密后的值
	// 对于ios设备，该值是设备的idfa加密后的值
	DeviceId *string `protobuf:"bytes,10,req,name=device_id,json=deviceId" json:"device_id,omitempty"`
	// 安卓设备的Android ID
	// 对于android设备，该值是设备的Android ID加密后的值
	// 对于ios设备，该值是设备的idfa加密后的值
	Anid *string `protobuf:"bytes,11,req,name=anid" json:"anid,omitempty"`
	// 用户设备的mac地址
	// 对于ios(6.0及以上)设备，该值为idfa加密后的值
	// 对于ios(6.0以下)设备，该值为mac地址加密后的值
	// 对于android设备，该值为mac地址加密后值
	Mac *string `protobuf:"bytes,12,req,name=mac" json:"mac,omitempty"`
	// 用户设备的屏幕宽度，以像素为单位
	Dvw *uint32 `protobuf:"varint,13,req,name=dvw" json:"dvw,omitempty"`
	// 用户设备的屏幕高度，以像素为单位
	Dvh *uint32 `protobuf:"varint,14,req,name=dvh" json:"dvh,omitempty"`
	// 用户的设备类型
	// 1：移动手机；2：平板电脑; 3:未知
	Devicetype *uint32 `protobuf:"varint,15,req,name=devicetype" json:"devicetype,omitempty"`
	// 用户设备的屏幕方向
	// 1：竖屏；2：横屏；3：未知；
	Orientation *uint32 `protobuf:"varint,16,req,name=orientation" json:"orientation,omitempty"`
	// 用户设备所在地理位置的经度（小数点格式）
	// 例如：116.41667
	Lon *string `protobuf:"bytes,17,opt,name=lon" json:"lon,omitempty"`
	// 用户设备所在位置的经度（小数点格式）
	// 例如：39.91667
	Lat *string `protobuf:"bytes,18,opt,name=lat" json:"lat,omitempty"`
	// 是否支持Javascript脚本(1：支持；2：不支持)
	Js *uint32 `protobuf:"varint,19,opt,name=js" json:"js,omitempty"`
	// 设备的语言设置，使用alpha-2/ISO 639-1
	Language             *string  `protobuf:"bytes,20,opt,name=language" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_App_DeviceInfo) Reset()         { *m = BidRequest_App_DeviceInfo{} }
func (m *BidRequest_App_DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App_DeviceInfo) ProtoMessage()    {}
func (*BidRequest_App_DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 1, 0}
}
func (m *BidRequest_App_DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_App_DeviceInfo.Unmarshal(m, b)
}
func (m *BidRequest_App_DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_App_DeviceInfo.Marshal(b, m, deterministic)
}
func (dst *BidRequest_App_DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_App_DeviceInfo.Merge(dst, src)
}
func (m *BidRequest_App_DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_BidRequest_App_DeviceInfo.Size(m)
}
func (m *BidRequest_App_DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_App_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_App_DeviceInfo proto.InternalMessageInfo

func (m *BidRequest_App_DeviceInfo) GetOs() uint32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetCarrier() uint32 {
	if m != nil && m.Carrier != nil {
		return *m.Carrier
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetConn() uint32 {
	if m != nil && m.Conn != nil {
		return *m.Conn
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetDensity() uint32 {
	if m != nil && m.Density != nil {
		return *m.Density
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetAnid() string {
	if m != nil && m.Anid != nil {
		return *m.Anid
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetDvw() uint32 {
	if m != nil && m.Dvw != nil {
		return *m.Dvw
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetDvh() uint32 {
	if m != nil && m.Dvh != nil {
		return *m.Dvh
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetDevicetype() uint32 {
	if m != nil && m.Devicetype != nil {
		return *m.Devicetype
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetOrientation() uint32 {
	if m != nil && m.Orientation != nil {
		return *m.Orientation
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetLon() string {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetLat() string {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetJs() uint32 {
	if m != nil && m.Js != nil {
		return *m.Js
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type BidRequest_App_AppInfo struct {
	// APP的主包名
	// 例如：com.moji.MojiWeather
	Pckname *string `protobuf:"bytes,1,req,name=pckname" json:"pckname,omitempty"`
	// 应用程序名称
	// 例如：陌陌
	// 先base64解码后再进行urldecode解码得到名称
	Appname *string `protobuf:"bytes,2,req,name=appname" json:"appname,omitempty"`
	// 应用程序的类型ID
	// 参见数据字典 dict-app-category.txt
	CategoryId           *uint32  `protobuf:"varint,3,req,name=category_id,json=categoryId" json:"category_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_App_AppInfo) Reset()         { *m = BidRequest_App_AppInfo{} }
func (m *BidRequest_App_AppInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App_AppInfo) ProtoMessage()    {}
func (*BidRequest_App_AppInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 1, 1}
}
func (m *BidRequest_App_AppInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_App_AppInfo.Unmarshal(m, b)
}
func (m *BidRequest_App_AppInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_App_AppInfo.Marshal(b, m, deterministic)
}
func (dst *BidRequest_App_AppInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_App_AppInfo.Merge(dst, src)
}
func (m *BidRequest_App_AppInfo) XXX_Size() int {
	return xxx_messageInfo_BidRequest_App_AppInfo.Size(m)
}
func (m *BidRequest_App_AppInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_App_AppInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_App_AppInfo proto.InternalMessageInfo

func (m *BidRequest_App_AppInfo) GetPckname() string {
	if m != nil && m.Pckname != nil {
		return *m.Pckname
	}
	return ""
}

func (m *BidRequest_App_AppInfo) GetAppname() string {
	if m != nil && m.Appname != nil {
		return *m.Appname
	}
	return ""
}

func (m *BidRequest_App_AppInfo) GetCategoryId() uint32 {
	if m != nil && m.CategoryId != nil {
		return *m.CategoryId
	}
	return 0
}

type BidRequest_Deal struct {
	PreferDeal           *BidRequest_Deal_PreferredDeal  `protobuf:"bytes,1,opt,name=prefer_deal,json=preferDeal" json:"prefer_deal,omitempty"`
	PrivAuc              *BidRequest_Deal_PrivateAuction `protobuf:"bytes,2,opt,name=priv_auc,json=privAuc" json:"priv_auc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *BidRequest_Deal) Reset()         { *m = BidRequest_Deal{} }
func (m *BidRequest_Deal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal) ProtoMessage()    {}
func (*BidRequest_Deal) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 2}
}
func (m *BidRequest_Deal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Deal.Unmarshal(m, b)
}
func (m *BidRequest_Deal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Deal.Marshal(b, m, deterministic)
}
func (dst *BidRequest_Deal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Deal.Merge(dst, src)
}
func (m *BidRequest_Deal) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Deal.Size(m)
}
func (m *BidRequest_Deal) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Deal.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Deal proto.InternalMessageInfo

func (m *BidRequest_Deal) GetPreferDeal() *BidRequest_Deal_PreferredDeal {
	if m != nil {
		return m.PreferDeal
	}
	return nil
}

func (m *BidRequest_Deal) GetPrivAuc() *BidRequest_Deal_PrivateAuction {
	if m != nil {
		return m.PrivAuc
	}
	return nil
}

// 优先交易
type BidRequest_Deal_PreferredDeal struct {
	Dealid *uint32 `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,2,rep,name=advertiser_ids,json=advertiserIds" json:"advertiser_ids,omitempty"`
	// 优先交易固定价格
	FixCpmPrice          *uint32  `protobuf:"varint,3,opt,name=fix_cpm_price,json=fixCpmPrice" json:"fix_cpm_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Deal_PreferredDeal) Reset()         { *m = BidRequest_Deal_PreferredDeal{} }
func (m *BidRequest_Deal_PreferredDeal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PreferredDeal) ProtoMessage()    {}
func (*BidRequest_Deal_PreferredDeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 2, 0}
}
func (m *BidRequest_Deal_PreferredDeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Deal_PreferredDeal.Unmarshal(m, b)
}
func (m *BidRequest_Deal_PreferredDeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Deal_PreferredDeal.Marshal(b, m, deterministic)
}
func (dst *BidRequest_Deal_PreferredDeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Deal_PreferredDeal.Merge(dst, src)
}
func (m *BidRequest_Deal_PreferredDeal) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Deal_PreferredDeal.Size(m)
}
func (m *BidRequest_Deal_PreferredDeal) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Deal_PreferredDeal.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Deal_PreferredDeal proto.InternalMessageInfo

func (m *BidRequest_Deal_PreferredDeal) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_Deal_PreferredDeal) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_Deal_PreferredDeal) GetFixCpmPrice() uint32 {
	if m != nil && m.FixCpmPrice != nil {
		return *m.FixCpmPrice
	}
	return 0
}

// 私有竞价
type BidRequest_Deal_PrivateAuction struct {
	Dealid               *uint32                                     `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	BuyerRules           []*BidRequest_Deal_PrivateAuction_BuyerRule `protobuf:"bytes,2,rep,name=buyer_rules,json=buyerRules" json:"buyer_rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *BidRequest_Deal_PrivateAuction) Reset()         { *m = BidRequest_Deal_PrivateAuction{} }
func (m *BidRequest_Deal_PrivateAuction) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PrivateAuction) ProtoMessage()    {}
func (*BidRequest_Deal_PrivateAuction) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 2, 1}
}
func (m *BidRequest_Deal_PrivateAuction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Deal_PrivateAuction.Unmarshal(m, b)
}
func (m *BidRequest_Deal_PrivateAuction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Deal_PrivateAuction.Marshal(b, m, deterministic)
}
func (dst *BidRequest_Deal_PrivateAuction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Deal_PrivateAuction.Merge(dst, src)
}
func (m *BidRequest_Deal_PrivateAuction) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Deal_PrivateAuction.Size(m)
}
func (m *BidRequest_Deal_PrivateAuction) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Deal_PrivateAuction.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Deal_PrivateAuction proto.InternalMessageInfo

func (m *BidRequest_Deal_PrivateAuction) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_Deal_PrivateAuction) GetBuyerRules() []*BidRequest_Deal_PrivateAuction_BuyerRule {
	if m != nil {
		return m.BuyerRules
	}
	return nil
}

// 购买的规则
type BidRequest_Deal_PrivateAuction_BuyerRule struct {
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,1,rep,name=advertiser_ids,json=advertiserIds" json:"advertiser_ids,omitempty"`
	// 私有竞价底价
	MinCpmPrice          *uint32  `protobuf:"varint,2,opt,name=min_cpm_price,json=minCpmPrice" json:"min_cpm_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) Reset() {
	*m = BidRequest_Deal_PrivateAuction_BuyerRule{}
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PrivateAuction_BuyerRule) ProtoMessage()    {}
func (*BidRequest_Deal_PrivateAuction_BuyerRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 2, 1, 0}
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Deal_PrivateAuction_BuyerRule.Unmarshal(m, b)
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Deal_PrivateAuction_BuyerRule.Marshal(b, m, deterministic)
}
func (dst *BidRequest_Deal_PrivateAuction_BuyerRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Deal_PrivateAuction_BuyerRule.Merge(dst, src)
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Deal_PrivateAuction_BuyerRule.Size(m)
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Deal_PrivateAuction_BuyerRule.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Deal_PrivateAuction_BuyerRule proto.InternalMessageInfo

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

// 聚告WAP或APP端 H5扩展视频模式，WIFI情况下将自动播放，非WIFI情况下以常规广告内容填充
type BidRequest_AdinallVideo struct {
	// 视频最长秒数，单位：秒
	MaxVideoDuration *uint32 `protobuf:"varint,1,req,name=max_video_duration,json=maxVideoDuration" json:"max_video_duration,omitempty"`
	// 聚告视频格式, 目前默认mp4
	Mime *string `protobuf:"bytes,2,req,name=mime" json:"mime,omitempty"`
	// 聚告视频尺寸比例, 例如：4:3或16:9
	Size                 *string  `protobuf:"bytes,3,req,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdinallVideo) Reset()         { *m = BidRequest_AdinallVideo{} }
func (m *BidRequest_AdinallVideo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdinallVideo) ProtoMessage()    {}
func (*BidRequest_AdinallVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{0, 3}
}
func (m *BidRequest_AdinallVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdinallVideo.Unmarshal(m, b)
}
func (m *BidRequest_AdinallVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdinallVideo.Marshal(b, m, deterministic)
}
func (dst *BidRequest_AdinallVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdinallVideo.Merge(dst, src)
}
func (m *BidRequest_AdinallVideo) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdinallVideo.Size(m)
}
func (m *BidRequest_AdinallVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdinallVideo.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdinallVideo proto.InternalMessageInfo

func (m *BidRequest_AdinallVideo) GetMaxVideoDuration() uint32 {
	if m != nil && m.MaxVideoDuration != nil {
		return *m.MaxVideoDuration
	}
	return 0
}

func (m *BidRequest_AdinallVideo) GetMime() string {
	if m != nil && m.Mime != nil {
		return *m.Mime
	}
	return ""
}

func (m *BidRequest_AdinallVideo) GetSize() string {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return ""
}

type BidResponse struct {
	// 当前协议版本号，目前为2
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 请填充BidRequest中的bid, 32字节的字符串
	Bid                  *string            `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	Ads                  []*BidResponse_Ads `protobuf:"bytes,3,rep,name=ads" json:"ads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}
func (*BidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{1}
}
func (m *BidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse.Unmarshal(m, b)
}
func (m *BidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse.Marshal(b, m, deterministic)
}
func (dst *BidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse.Merge(dst, src)
}
func (m *BidResponse) XXX_Size() int {
	return xxx_messageInfo_BidResponse.Size(m)
}
func (m *BidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse proto.InternalMessageInfo

func (m *BidResponse) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidResponse) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidResponse) GetAds() []*BidResponse_Ads {
	if m != nil {
		return m.Ads
	}
	return nil
}

// ------------------------------------------- 广告内容信息
// 若DSP不对本次请求报价，则不要设置本字段
type BidResponse_Ads struct {
	// 请填充BidRequest中的adid
	Adid *uint32 `protobuf:"varint,1,req,name=adid" json:"adid,omitempty"`
	// 广告竞标价格（人民币）, 单位为分/千次展现
	// 该字段值不允许为0
	// 且不能低于推广位最低竞标价格（BidRequest.min_cpm_price）
	MaxCpmPrice *uint32 `protobuf:"varint,2,req,name=max_cpm_price,json=maxCpmPrice" json:"max_cpm_price,omitempty"`
	// 创意在DSP中的唯一ID, 仅收集(用于数据对比和创意审核)
	CreativeId *string `protobuf:"bytes,3,opt,name=creative_id,json=creativeId" json:"creative_id,omitempty"`
	// DSP声明的本次广告类型
	// 参见数据字典 dict-creative-type.txt
	CreativeType *uint32 `protobuf:"varint,4,req,name=creative_type,json=creativeType" json:"creative_type,omitempty"`
	// DSP声明的本次广告所属的广告行业类目
	// 参见数据字典 dict-content-tags.txt 或 dict-app-content-tags.txt
	Category []uint32 `protobuf:"varint,5,rep,name=category" json:"category,omitempty"`
	// 广告缩略图地址, 用于在聚告PMP统计分析
	ThumbImgUrl *string `protobuf:"bytes,6,opt,name=thumb_img_url,json=thumbImgUrl" json:"thumb_img_url,omitempty"`
	// 广告 landing page 主域名
	AdDomain *string `protobuf:"bytes,7,opt,name=ad_domain,json=adDomain" json:"ad_domain,omitempty"`
	// 广告代码HTML片段
	// 点击宏 %%AD_CLICK_URL%%
	// 聚告PMP会根据点击宏替换HTML片段中的内容，APP不建议使用改字段并请填充1
	// (例如: <a href="%%AD_CLICK_URL%%http://www.dsp.com/ad.html"><img src="http://www.dsp.com/ad.jpg" /></a> 替换为 <a href="http://cm.adinall.com/?dspid=123456&target=http://www.dsp.com/ad.html"><img src="http://www.dsp.com/ad.jpg" /></a>)
	// 价格宏，具体见开发文档
	HtmlSnippet *string `protobuf:"bytes,8,req,name=html_snippet,json=htmlSnippet" json:"html_snippet,omitempty"`
	// DSP买家ID, 与BidRequest中exclude_buyer_id对应
	BuyerId *string `protobuf:"bytes,9,opt,name=buyer_id,json=buyerId" json:"buyer_id,omitempty"`
	// 参与PMP竞价的id, 要和请求中Deal定义中的dealid一致
	// 如果不设置标识参与公开竞价
	Dealid               *uint32                       `protobuf:"varint,10,opt,name=dealid" json:"dealid,omitempty"`
	App                  []*BidResponse_Ads_App        `protobuf:"bytes,11,rep,name=app" json:"app,omitempty"`
	AdinallVideo         *BidResponse_Ads_AdinallVideo `protobuf:"bytes,12,opt,name=adinall_video,json=adinallVideo" json:"adinall_video,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BidResponse_Ads) Reset()         { *m = BidResponse_Ads{} }
func (m *BidResponse_Ads) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads) ProtoMessage()    {}
func (*BidResponse_Ads) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{1, 0}
}
func (m *BidResponse_Ads) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ads.Unmarshal(m, b)
}
func (m *BidResponse_Ads) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ads.Marshal(b, m, deterministic)
}
func (dst *BidResponse_Ads) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ads.Merge(dst, src)
}
func (m *BidResponse_Ads) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ads.Size(m)
}
func (m *BidResponse_Ads) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ads.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ads proto.InternalMessageInfo

func (m *BidResponse_Ads) GetAdid() uint32 {
	if m != nil && m.Adid != nil {
		return *m.Adid
	}
	return 0
}

func (m *BidResponse_Ads) GetMaxCpmPrice() uint32 {
	if m != nil && m.MaxCpmPrice != nil {
		return *m.MaxCpmPrice
	}
	return 0
}

func (m *BidResponse_Ads) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *BidResponse_Ads) GetCreativeType() uint32 {
	if m != nil && m.CreativeType != nil {
		return *m.CreativeType
	}
	return 0
}

func (m *BidResponse_Ads) GetCategory() []uint32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidResponse_Ads) GetThumbImgUrl() string {
	if m != nil && m.ThumbImgUrl != nil {
		return *m.ThumbImgUrl
	}
	return ""
}

func (m *BidResponse_Ads) GetAdDomain() string {
	if m != nil && m.AdDomain != nil {
		return *m.AdDomain
	}
	return ""
}

func (m *BidResponse_Ads) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Ads) GetBuyerId() string {
	if m != nil && m.BuyerId != nil {
		return *m.BuyerId
	}
	return ""
}

func (m *BidResponse_Ads) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidResponse_Ads) GetApp() []*BidResponse_Ads_App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *BidResponse_Ads) GetAdinallVideo() *BidResponse_Ads_AdinallVideo {
	if m != nil {
		return m.AdinallVideo
	}
	return nil
}

type BidResponse_Ads_App struct {
	// 广告物料地址，图片地址
	Imgurl *string `protobuf:"bytes,1,req,name=imgurl" json:"imgurl,omitempty"`
	// 素材标题，仅适用于native广告
	// 一般10个汉字(20个字节)左右
	Title *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// 素材描述，仅适用于native广告
	// 一般20个汉字(40个字节)左右
	Desc *string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	// 数组，当广告展示的时候的反馈地址
	Impressionreport []string `protobuf:"bytes,4,rep,name=impressionreport" json:"impressionreport,omitempty"`
	// 数组，当广告点击的时候的反馈地址
	Clickreport []string `protobuf:"bytes,5,rep,name=clickreport" json:"clickreport,omitempty"`
	// 价格宏
	// %%AD_WIN_NOTICE%%
	// 聚告ssp会根据展示宏替换竞价胜出上报中的内容
	// 竞价胜出反馈地址,详细参见文档
	Winnotice *string `protobuf:"bytes,6,req,name=winnotice" json:"winnotice,omitempty"`
	// 广告最终落地页地址
	Ldp                  *string  `protobuf:"bytes,7,opt,name=ldp" json:"ldp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ads_App) Reset()         { *m = BidResponse_Ads_App{} }
func (m *BidResponse_Ads_App) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads_App) ProtoMessage()    {}
func (*BidResponse_Ads_App) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{1, 0, 0}
}
func (m *BidResponse_Ads_App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ads_App.Unmarshal(m, b)
}
func (m *BidResponse_Ads_App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ads_App.Marshal(b, m, deterministic)
}
func (dst *BidResponse_Ads_App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ads_App.Merge(dst, src)
}
func (m *BidResponse_Ads_App) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ads_App.Size(m)
}
func (m *BidResponse_Ads_App) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ads_App.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ads_App proto.InternalMessageInfo

func (m *BidResponse_Ads_App) GetImgurl() string {
	if m != nil && m.Imgurl != nil {
		return *m.Imgurl
	}
	return ""
}

func (m *BidResponse_Ads_App) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidResponse_Ads_App) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *BidResponse_Ads_App) GetImpressionreport() []string {
	if m != nil {
		return m.Impressionreport
	}
	return nil
}

func (m *BidResponse_Ads_App) GetClickreport() []string {
	if m != nil {
		return m.Clickreport
	}
	return nil
}

func (m *BidResponse_Ads_App) GetWinnotice() string {
	if m != nil && m.Winnotice != nil {
		return *m.Winnotice
	}
	return ""
}

func (m *BidResponse_Ads_App) GetLdp() string {
	if m != nil && m.Ldp != nil {
		return *m.Ldp
	}
	return ""
}

// 聚告WAP、APP H5扩展视频物料对象
type BidResponse_Ads_AdinallVideo struct {
	// 视频图片地址
	Imgurl *string `protobuf:"bytes,1,req,name=imgurl" json:"imgurl,omitempty"`
	// 视频链接
	VideoLink *string `protobuf:"bytes,2,req,name=video_link,json=videoLink" json:"video_link,omitempty"`
	// 数组，当广告展示的时候的反馈地址，支持价格宏
	Impressionreport []string `protobuf:"bytes,3,rep,name=impressionreport" json:"impressionreport,omitempty"`
	// 数组，当广告点击的时候的反馈地址
	Clickreport []string `protobuf:"bytes,4,rep,name=clickreport" json:"clickreport,omitempty"`
	// 广告最终落地页地址
	Ldp                  *string  `protobuf:"bytes,7,req,name=ldp" json:"ldp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ads_AdinallVideo) Reset()         { *m = BidResponse_Ads_AdinallVideo{} }
func (m *BidResponse_Ads_AdinallVideo) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads_AdinallVideo) ProtoMessage()    {}
func (*BidResponse_Ads_AdinallVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_adinall_bidding_c6032c1fb6ddfb78, []int{1, 0, 1}
}
func (m *BidResponse_Ads_AdinallVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ads_AdinallVideo.Unmarshal(m, b)
}
func (m *BidResponse_Ads_AdinallVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ads_AdinallVideo.Marshal(b, m, deterministic)
}
func (dst *BidResponse_Ads_AdinallVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ads_AdinallVideo.Merge(dst, src)
}
func (m *BidResponse_Ads_AdinallVideo) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ads_AdinallVideo.Size(m)
}
func (m *BidResponse_Ads_AdinallVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ads_AdinallVideo.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ads_AdinallVideo proto.InternalMessageInfo

func (m *BidResponse_Ads_AdinallVideo) GetImgurl() string {
	if m != nil && m.Imgurl != nil {
		return *m.Imgurl
	}
	return ""
}

func (m *BidResponse_Ads_AdinallVideo) GetVideoLink() string {
	if m != nil && m.VideoLink != nil {
		return *m.VideoLink
	}
	return ""
}

func (m *BidResponse_Ads_AdinallVideo) GetImpressionreport() []string {
	if m != nil {
		return m.Impressionreport
	}
	return nil
}

func (m *BidResponse_Ads_AdinallVideo) GetClickreport() []string {
	if m != nil {
		return m.Clickreport
	}
	return nil
}

func (m *BidResponse_Ads_AdinallVideo) GetLdp() string {
	if m != nil && m.Ldp != nil {
		return *m.Ldp
	}
	return ""
}

func init() {
	proto.RegisterType((*BidRequest)(nil), "adinall.BidRequest")
	proto.RegisterType((*BidRequest_AdInfo)(nil), "adinall.BidRequest.AdInfo")
	proto.RegisterType((*BidRequest_App)(nil), "adinall.BidRequest.App")
	proto.RegisterType((*BidRequest_App_DeviceInfo)(nil), "adinall.BidRequest.App.DeviceInfo")
	proto.RegisterType((*BidRequest_App_AppInfo)(nil), "adinall.BidRequest.App.AppInfo")
	proto.RegisterType((*BidRequest_Deal)(nil), "adinall.BidRequest.Deal")
	proto.RegisterType((*BidRequest_Deal_PreferredDeal)(nil), "adinall.BidRequest.Deal.PreferredDeal")
	proto.RegisterType((*BidRequest_Deal_PrivateAuction)(nil), "adinall.BidRequest.Deal.PrivateAuction")
	proto.RegisterType((*BidRequest_Deal_PrivateAuction_BuyerRule)(nil), "adinall.BidRequest.Deal.PrivateAuction.BuyerRule")
	proto.RegisterType((*BidRequest_AdinallVideo)(nil), "adinall.BidRequest.AdinallVideo")
	proto.RegisterType((*BidResponse)(nil), "adinall.BidResponse")
	proto.RegisterType((*BidResponse_Ads)(nil), "adinall.BidResponse.Ads")
	proto.RegisterType((*BidResponse_Ads_App)(nil), "adinall.BidResponse.Ads.App")
	proto.RegisterType((*BidResponse_Ads_AdinallVideo)(nil), "adinall.BidResponse.Ads.AdinallVideo")
	proto.RegisterEnum("adinall.BidRequest_AdInfo_ViewScreen", BidRequest_AdInfo_ViewScreen_name, BidRequest_AdInfo_ViewScreen_value)
}

func init() {
	proto.RegisterFile("adinall-bidding.proto", fileDescriptor_adinall_bidding_c6032c1fb6ddfb78)
}

var fileDescriptor_adinall_bidding_c6032c1fb6ddfb78 = []byte{
	// 1571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdd, 0x92, 0x1b, 0x39,
	0x15, 0xa6, 0xdd, 0xfe, 0x3d, 0xed, 0x9e, 0x38, 0x22, 0xec, 0x0a, 0x93, 0x65, 0xbd, 0x43, 0x25,
	0x78, 0xb7, 0xc0, 0x05, 0x73, 0xc7, 0x16, 0x37, 0x4e, 0x66, 0x42, 0x4c, 0x51, 0x49, 0xaa, 0x3d,
	0x9b, 0x4b, 0xba, 0x34, 0x2d, 0x8d, 0x47, 0x9b, 0xfe, 0xa3, 0xd5, 0xf6, 0xcc, 0xec, 0x1b, 0xc0,
	0x4b, 0x40, 0x51, 0x45, 0x15, 0x2f, 0xc1, 0x25, 0x6f, 0xc0, 0x35, 0xcf, 0x42, 0x9d, 0x23, 0xb5,
	0xed, 0x49, 0xc6, 0x54, 0xf6, 0x4e, 0xe7, 0xd3, 0x91, 0x5a, 0x3a, 0xfa, 0xce, 0x77, 0x4e, 0xc3,
	0x8f, 0x84, 0xd4, 0xb9, 0x48, 0xd3, 0x5f, 0x5e, 0x68, 0x29, 0x75, 0xbe, 0x9a, 0x95, 0x55, 0x51,
	0x17, 0xac, 0xe7, 0xe0, 0xe3, 0xbf, 0x3d, 0x02, 0x78, 0xa6, 0x65, 0xa4, 0xfe, 0xb4, 0x56, 0xa6,
	0x66, 0x1c, 0x7a, 0x1b, 0x55, 0x19, 0x5d, 0xe4, 0xdc, 0x9b, 0xb4, 0xa6, 0x9d, 0xa8, 0x31, 0xd9,
	0x08, 0xfc, 0x0b, 0x2d, 0x79, 0x6b, 0xd2, 0x9a, 0x0e, 0x22, 0x1c, 0xb2, 0x31, 0xf4, 0xb4, 0x89,
	0x6b, 0x65, 0x6a, 0xee, 0x4f, 0xbc, 0x69, 0xf8, 0xb5, 0xf7, 0xab, 0xa8, 0xab, 0xcd, 0x39, 0xee,
	0x63, 0xe7, 0x4a, 0x9d, 0xaf, 0x78, 0x7b, 0x6f, 0xee, 0x8d, 0xce, 0x57, 0xec, 0x08, 0x5a, 0xba,
	0xe4, 0x9d, 0x89, 0x37, 0x1d, 0x44, 0x2d, 0x5d, 0xb2, 0xcf, 0x00, 0xd6, 0x46, 0x55, 0xb1, 0x58,
	0xa9, 0xbc, 0xe6, 0x5d, 0xc2, 0x07, 0x88, 0xcc, 0x11, 0xc0, 0x23, 0x55, 0xea, 0x52, 0x55, 0xaa,
	0xe2, 0x3d, 0x9a, 0x6b, 0x4c, 0x36, 0x86, 0x7e, 0x2a, 0xf2, 0xd5, 0x5a, 0xac, 0x14, 0xef, 0xd3,
	0xd4, 0xd6, 0x66, 0x9f, 0x43, 0x60, 0x92, 0x4a, 0xa9, 0x3c, 0x36, 0xfa, 0x3b, 0xc5, 0x07, 0x34,
	0x0d, 0x16, 0x5a, 0xea, 0xef, 0x14, 0x7b, 0x0a, 0xe1, 0x65, 0x2a, 0xcc, 0x55, 0xdc, 0xdc, 0x17,
	0x26, 0xde, 0xb4, 0x83, 0xe7, 0x1c, 0x12, 0xfe, 0xd6, 0xdd, 0xfb, 0x33, 0x80, 0x8d, 0x36, 0xba,
	0x2e, 0xaa, 0x58, 0x4b, 0x1e, 0xd8, 0xd3, 0x39, 0x64, 0x21, 0x31, 0x2c, 0x2b, 0x55, 0xf0, 0x21,
	0xe1, 0x38, 0x64, 0x9f, 0x40, 0x57, 0x16, 0x99, 0xd0, 0x39, 0x0f, 0x09, 0x74, 0x16, 0x7a, 0xae,
	0xab, 0x94, 0x1f, 0x59, 0xcf, 0x75, 0x95, 0xb2, 0xa7, 0xf0, 0xa0, 0x14, 0x2b, 0x15, 0x1b, 0x65,
	0xf0, 0x53, 0xb8, 0xff, 0x03, 0x9a, 0x0d, 0x11, 0x5e, 0x5a, 0x74, 0x81, 0x81, 0xee, 0x27, 0xa2,
	0x56, 0xab, 0xa2, 0xba, 0xe5, 0xa3, 0x89, 0x3f, 0x0d, 0xa3, 0xad, 0xcd, 0xbe, 0x80, 0x21, 0x05,
	0xcf, 0xa8, 0x55, 0x86, 0xe1, 0x7b, 0x38, 0xf1, 0xa7, 0x83, 0x28, 0x40, 0x6c, 0x69, 0x21, 0x74,
	0x49, 0x8a, 0xbc, 0x56, 0x79, 0x1d, 0xd7, 0x62, 0x65, 0x38, 0xb3, 0x2e, 0x0e, 0x3b, 0x17, 0x2b,
	0xc3, 0x1e, 0x43, 0x5f, 0xc8, 0x9b, 0xb8, 0xbe, 0x2d, 0x15, 0xff, 0x61, 0xf3, 0x5e, 0x3d, 0x21,
	0x6f, 0xce, 0x6f, 0x4b, 0xc5, 0x4e, 0xa0, 0x8b, 0x74, 0xb9, 0x2c, 0xf8, 0xa3, 0x89, 0x3f, 0x0d,
	0x4e, 0xc6, 0x33, 0xc7, 0x9e, 0xd9, 0x8e, 0x39, 0xb3, 0xb9, 0x5c, 0xe4, 0x97, 0x45, 0xe4, 0x3c,
	0xd9, 0x97, 0xe0, 0x8b, 0xb2, 0xe4, 0x9f, 0x4c, 0xbc, 0x69, 0x70, 0xf2, 0xe9, 0xbd, 0x0b, 0xca,
	0x32, 0x42, 0x1f, 0x36, 0x83, 0x8e, 0x54, 0x22, 0x35, 0xfc, 0x53, 0x72, 0xe6, 0xf7, 0x39, 0x9f,
	0x2a, 0x91, 0x46, 0xd6, 0x8d, 0x9d, 0x41, 0xe8, 0x3c, 0xe2, 0x8d, 0x96, 0xaa, 0xe0, 0x9c, 0xd6,
	0x4d, 0xee, 0x3f, 0x15, 0x41, 0x6f, 0xd1, 0x2f, 0x1a, 0x8a, 0x3d, 0x6b, 0xfc, 0xaf, 0x36, 0x74,
	0xed, 0xa1, 0xd9, 0x8f, 0xa1, 0x9f, 0x29, 0xa9, 0x05, 0xbe, 0x80, 0x47, 0x04, 0xef, 0x91, 0xbd,
	0x90, 0x8c, 0x41, 0x5b, 0x48, 0xc7, 0xfb, 0x30, 0xa2, 0x31, 0x06, 0xd4, 0xba, 0x4b, 0xb5, 0xd1,
	0x89, 0xb2, 0xec, 0x8f, 0x02, 0xc2, 0x4e, 0x09, 0x62, 0x3f, 0x81, 0xc1, 0x46, 0xab, 0x6b, 0x1b,
	0xd1, 0x36, 0xad, 0xed, 0x23, 0x40, 0xf1, 0x64, 0xd0, 0x26, 0x52, 0x76, 0xe8, 0x53, 0x34, 0x66,
	0xc7, 0x10, 0x66, 0x3a, 0x8f, 0x93, 0x32, 0x8b, 0xcb, 0x0a, 0x37, 0xed, 0xd2, 0xa2, 0x20, 0xd3,
	0xf9, 0xf3, 0x32, 0x7b, 0x83, 0x10, 0xfb, 0x2d, 0x8c, 0xd5, 0x4d, 0x92, 0xae, 0x25, 0x52, 0x26,
	0x37, 0xba, 0xd6, 0x1b, 0x15, 0x6f, 0x99, 0xd1, 0x23, 0x66, 0x70, 0xe7, 0xb1, 0x6c, 0x1c, 0x9e,
	0x37, 0x4c, 0x79, 0x02, 0x47, 0xcd, 0x6a, 0xc7, 0xcf, 0x3e, 0x11, 0x21, 0x74, 0xe8, 0xa9, 0xa5,
	0xe9, 0x14, 0x46, 0x8d, 0xdb, 0xc5, 0xfa, 0x56, 0x11, 0xeb, 0x07, 0xe4, 0xd8, 0x2c, 0x7f, 0x86,
	0xf0, 0x42, 0xb2, 0x17, 0x10, 0xd0, 0x1d, 0x6d, 0x52, 0x51, 0xfe, 0x1c, 0x9d, 0x3c, 0x39, 0xcc,
	0x8d, 0xd9, 0x5b, 0xad, 0xae, 0x97, 0xe4, 0x1c, 0xc1, 0x66, 0x3b, 0x66, 0x5f, 0xc2, 0xa8, 0xae,
	0x44, 0x6e, 0x44, 0x52, 0x63, 0x16, 0x50, 0xc8, 0x02, 0xba, 0xfd, 0x83, 0x3d, 0x1c, 0x23, 0x77,
	0xfc, 0x67, 0x0f, 0x60, 0xb7, 0x0b, 0x0b, 0x61, 0xb0, 0x7c, 0x1e, 0x9d, 0x9d, 0xbd, 0x8a, 0x5f,
	0xcd, 0x47, 0x3f, 0x60, 0x23, 0x18, 0x3a, 0xf3, 0xc5, 0x22, 0x5a, 0x9e, 0x8f, 0x3c, 0xf6, 0x10,
	0x42, 0x87, 0x2c, 0xcf, 0x9e, 0xbf, 0x7e, 0x75, 0x3a, 0x6a, 0xed, 0x39, 0x9d, 0xbf, 0x5c, 0x44,
	0xa7, 0x23, 0x7f, 0xcf, 0xe9, 0xc5, 0xeb, 0x6f, 0xa2, 0xf3, 0x97, 0xa3, 0xf6, 0x9d, 0x9d, 0x5e,
	0x9c, 0xbf, 0x1c, 0x75, 0xf6, 0x90, 0xd7, 0xe7, 0x2f, 0xcf, 0xa2, 0x51, 0x77, 0xfc, 0xd7, 0x0e,
	0xf8, 0xf3, 0xb2, 0xc4, 0x7c, 0x17, 0x92, 0x0e, 0xed, 0xd1, 0xa1, 0x9d, 0xc5, 0xbe, 0x86, 0xae,
	0xe3, 0x07, 0x72, 0x27, 0x38, 0x39, 0x3e, 0x90, 0x04, 0x33, 0x4b, 0x19, 0x9b, 0x3d, 0x76, 0x05,
	0xfb, 0x0d, 0xf4, 0x44, 0x59, 0x52, 0xca, 0xf9, 0xb4, 0xf8, 0xf3, 0x43, 0x8b, 0xe7, 0x65, 0x49,
	0x2b, 0x1b, 0xff, 0xf1, 0x3f, 0x7d, 0x80, 0xdd, 0x8e, 0x28, 0xb6, 0x85, 0xa1, 0x4d, 0xc2, 0xa8,
	0x55, 0x18, 0x94, 0xb3, 0xc2, 0x6c, 0x35, 0xaf, 0x4d, 0x0c, 0x1c, 0x14, 0xa6, 0x51, 0x3b, 0x0e,
	0xbd, 0x44, 0x54, 0x95, 0x56, 0x15, 0xb1, 0x33, 0x8c, 0x1a, 0x13, 0x49, 0x9b, 0x14, 0x79, 0xee,
	0x78, 0x49, 0x63, 0xf4, 0x96, 0xc4, 0xb3, 0x5b, 0x92, 0xe6, 0x30, 0x6a, 0x4c, 0xf6, 0x08, 0x3a,
	0x17, 0x95, 0xc8, 0x25, 0xef, 0xd3, 0x17, 0xac, 0x81, 0x68, 0x56, 0x48, 0x95, 0xf2, 0x81, 0x45,
	0xc9, 0xc0, 0x5c, 0xb1, 0xd7, 0x46, 0xaa, 0x01, 0xcd, 0xf4, 0x2d, 0xe0, 0xf2, 0x2f, 0x27, 0xe1,
	0xa5, 0x5c, 0xc1, 0x31, 0x2a, 0x69, 0x26, 0x12, 0x3e, 0xb4, 0xa5, 0x28, 0x13, 0x09, 0x22, 0x72,
	0x73, 0xcd, 0x43, 0x3a, 0x1b, 0x0e, 0x2d, 0x72, 0xc5, 0x8f, 0x1a, 0xe4, 0x8a, 0xfd, 0x14, 0xc0,
	0xee, 0x4a, 0x6f, 0xf5, 0x80, 0x26, 0xf6, 0x10, 0x36, 0x81, 0xa0, 0xa8, 0xb4, 0xca, 0x6b, 0x81,
	0x74, 0xe3, 0x23, 0x9b, 0x7f, 0x7b, 0x10, 0xee, 0x99, 0x16, 0x39, 0x7f, 0x68, 0x15, 0x3c, 0x75,
	0x88, 0xa8, 0x39, 0x73, 0x88, 0xa8, 0x31, 0xde, 0xdf, 0x1a, 0xab, 0xa1, 0x51, 0xeb, 0x5b, 0x73,
	0xa7, 0x46, 0x3d, 0xba, 0x5b, 0xa3, 0xc6, 0x7f, 0x84, 0x9e, 0x7b, 0x3e, 0x8c, 0x64, 0x99, 0xbc,
	0xcb, 0x45, 0xa6, 0x1a, 0x01, 0x72, 0x26, 0xce, 0x88, 0xb2, 0xa4, 0x19, 0x5b, 0x7b, 0x1b, 0x13,
	0x4b, 0x5c, 0x93, 0xfc, 0x18, 0x39, 0xfb, 0xc6, 0xd0, 0x40, 0x0b, 0x39, 0xfe, 0xaf, 0x0f, 0x6d,
	0x14, 0x4e, 0xf6, 0x3b, 0x08, 0x4a, 0x2a, 0x9a, 0x31, 0x2a, 0x28, 0xf7, 0x48, 0x2f, 0x9f, 0x1e,
	0xd2, 0xd9, 0xd9, 0x1b, 0xf2, 0xad, 0x94, 0x24, 0xd5, 0x05, 0xbb, 0x94, 0x36, 0x7a, 0x06, 0xfd,
	0xb2, 0xd2, 0x9b, 0x58, 0xac, 0x13, 0xde, 0xa2, 0x5d, 0x7e, 0xfe, 0x7f, 0x76, 0xd1, 0x1b, 0x51,
	0xab, 0xf9, 0x9a, 0xd2, 0x37, 0xea, 0xe1, 0xc2, 0xf9, 0x3a, 0x19, 0x57, 0x10, 0xde, 0xf9, 0x00,
	0x15, 0x4c, 0x25, 0x52, 0xa7, 0xbd, 0x61, 0xe4, 0x2c, 0x14, 0x2c, 0x21, 0x37, 0xaa, 0xaa, 0xb5,
	0x21, 0x19, 0x32, 0xbc, 0x45, 0x12, 0x17, 0xee, 0xd0, 0x85, 0x34, 0xa8, 0x9c, 0x97, 0xfa, 0x66,
	0x4f, 0x39, 0x9d, 0x1c, 0x5f, 0xea, 0x9b, 0x46, 0x39, 0xc7, 0xff, 0xf1, 0xe0, 0xe8, 0xee, 0x79,
	0x0e, 0x7e, 0x35, 0x82, 0xc0, 0xea, 0x5e, 0xb5, 0x4e, 0x95, 0xfd, 0x64, 0x70, 0xf2, 0xeb, 0x8f,
	0xbc, 0xe5, 0x8c, 0xb4, 0x31, 0x5a, 0xa7, 0x2a, 0x82, 0x8b, 0x66, 0x68, 0xc6, 0x6f, 0x61, 0xb0,
	0x9d, 0xb8, 0xe7, 0x5a, 0xde, 0x81, 0x6b, 0xdd, 0x2d, 0x08, 0x2d, 0x57, 0x65, 0x76, 0x05, 0x61,
	0x2c, 0x61, 0xb8, 0x5f, 0xe0, 0xd8, 0x2f, 0x80, 0x65, 0xe2, 0xc6, 0x56, 0xc5, 0x58, 0xae, 0x2b,
	0xcb, 0x64, 0x7b, 0xbf, 0x51, 0x26, 0x6e, 0xc8, 0xeb, 0xd4, 0xe1, 0x98, 0x5a, 0x99, 0xde, 0xd2,
	0x8a, 0xc6, 0xdb, 0xd2, 0xe4, 0xef, 0x4a, 0xd3, 0xf1, 0x5f, 0x7a, 0x10, 0xd0, 0xb5, 0x4d, 0x59,
	0xe4, 0x46, 0x7d, 0xaf, 0x1e, 0xf1, 0x2b, 0xf0, 0x85, 0x44, 0xfd, 0xf1, 0x3f, 0xac, 0xec, 0x76,
	0xbb, 0xd9, 0x5c, 0x9a, 0x08, 0x9d, 0xc6, 0x7f, 0xef, 0x82, 0x3f, 0x97, 0x66, 0x5b, 0x72, 0xbd,
	0xbd, 0x92, 0x8b, 0xd1, 0x10, 0x37, 0x77, 0xa2, 0x61, 0xcb, 0xa3, 0xd8, 0x3e, 0x32, 0xe5, 0x43,
	0xa5, 0x04, 0x55, 0x45, 0xca, 0x07, 0x6a, 0xf9, 0x1a, 0x68, 0x21, 0xd9, 0xcf, 0x20, 0xdc, 0x3a,
	0xec, 0x15, 0xe6, 0x61, 0x03, 0x52, 0x71, 0xde, 0x6f, 0xb6, 0x3a, 0xef, 0x35, 0x5b, 0xc7, 0x10,
	0xd6, 0x57, 0xeb, 0xec, 0x22, 0xd6, 0xd9, 0x2a, 0xc6, 0x66, 0xce, 0x36, 0xab, 0x01, 0x81, 0x8b,
	0x6c, 0xf5, 0x4d, 0x45, 0x6a, 0x26, 0x64, 0x53, 0x61, 0x6d, 0xc3, 0xda, 0x17, 0xd2, 0x15, 0xd7,
	0x2f, 0x60, 0x78, 0x55, 0x67, 0x69, 0x6c, 0x72, 0x5d, 0x96, 0xaa, 0x76, 0xea, 0x18, 0x20, 0xb6,
	0xb4, 0x10, 0xf6, 0x22, 0x7b, 0x75, 0x97, 0xfa, 0xdd, 0x0b, 0x57, 0x70, 0x77, 0x94, 0x05, 0xe2,
	0x42, 0x43, 0xd9, 0x99, 0xed, 0xb5, 0x02, 0x0a, 0xf2, 0xe3, 0x43, 0x41, 0xde, 0x35, 0x5c, 0xbf,
	0x7f, 0xbf, 0x81, 0x1a, 0x52, 0x2a, 0x3f, 0x39, 0xbc, 0xf2, 0x70, 0x17, 0xf5, 0x6f, 0x6f, 0x5b,
	0x05, 0x75, 0xb6, 0xc2, 0x98, 0x58, 0xfd, 0x72, 0x16, 0x4a, 0x7e, 0xad, 0xeb, 0xd4, 0xd2, 0x77,
	0x10, 0x59, 0x03, 0x9f, 0x58, 0x2a, 0x93, 0xb8, 0x37, 0xa2, 0x31, 0xfb, 0x0a, 0x46, 0x3a, 0x2b,
	0x2b, 0xdb, 0xf5, 0x56, 0xaa, 0x2c, 0xaa, 0x9a, 0xb7, 0xa9, 0xf1, 0xf8, 0x00, 0x47, 0xad, 0x4e,
	0x52, 0x9d, 0xbc, 0x73, 0x6e, 0x1d, 0xd7, 0xd1, 0xee, 0x20, 0xf6, 0x18, 0x06, 0xd7, 0x3a, 0xcf,
	0x8b, 0xba, 0xe9, 0xa5, 0x06, 0xd1, 0x0e, 0x20, 0xdd, 0x96, 0xa5, 0x7b, 0x1e, 0x1c, 0x8e, 0xff,
	0xe1, 0xbd, 0x97, 0x4b, 0x87, 0x2e, 0x44, 0xff, 0x03, 0x98, 0x5f, 0xa9, 0xce, 0xdf, 0x39, 0xaa,
	0x0f, 0x08, 0xf9, 0x83, 0xce, 0xdf, 0xdd, 0x7b, 0x0b, 0xff, 0xe3, 0x6e, 0xd1, 0xfe, 0xf0, 0x16,
	0xdb, 0x73, 0xb6, 0xdc, 0x39, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xea, 0x7f, 0x10, 0xd0,
	0x0d, 0x00, 0x00,
}
